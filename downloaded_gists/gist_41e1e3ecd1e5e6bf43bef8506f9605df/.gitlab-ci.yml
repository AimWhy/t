stages:
  - build
  - cleanup
  - deploy

build:
  stage: build
  only:
    - master
    - pre
    - test
    - dev
  script:
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    #- echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    # unique hash of required dependencies
    - PACKAGE_HASH=$(md5sum package.json | awk '{print $1}')
    # path to cache file
    - mkdir -p /cache/node_modules
    - DEPS_CACHE=/cache/node_modules/${PACKAGE_HASH}.tar
    # check if cache file exists and if not, create it
    - if [ -f $DEPS_CACHE ];
      then
        echo "Using cache";
        tar xf $DEPS_CACHE;
      else
        echo "Installing dependencies";
        export NVM_NODEJS_ORG_MIRROR="http://npm.taobao.org/mirrors/node";
        export SASS_BINARY_SITE="https://npm.taobao.org/mirrors/node-sass";
        npm install --registry=https://registry.npm.taobao.org --disturl=https://npm.taobao.org/dist;
        tar cf - ./node_modules > $DEPS_CACHE;
      fi
    # init some variables for build
    - if [ $CI_BUILD_REF_NAME = "dev" ] || [ $CI_BUILD_REF_NAME = "test" ];
      then
        NODE_ENV="staging";
        BASE_URL="//api.$CI_BUILD_REF_NAME.didicloud.io";
      else
        NODE_ENV="production";
        BASE_URL="";
      fi
    # npm build
    - echo "NODE_ENV=$NODE_ENV BASE_URL=$BASE_URL node build/build.js"
    - NODE_ENV=$NODE_ENV BASE_URL=$BASE_URL node build/build.js
    # upload to CDN
    - if [ $NODE_ENV = "production" ];
      then
        sh boilerplate/deploy.sh;
      fi
    - tar -cf boilerplate.tar boilerplate
    # docker build
    - IMAGE_ID=`docker build . | tail -n 1 | awk -F "Successfully built " '{print $2}' | sed 's/^ *\| *$//g'`
    - echo "IMAGE_ID=$IMAGE_ID"
    # docker push
    - if [ $CI_BUILD_REF_NAME = "dev" ] || [ $CI_BUILD_REF_NAME = "test" ];
      then
        docker login harbor.intra.xiaojukeji.com -u$HARBOR_USERNAME -p$HARBOR_PASSWORD;
        docker tag $IMAGE_ID harbor.intra.xiaojukeji.com/chishui/dicloud-webapp:$CI_BUILD_REF_NAME;
        docker push harbor.intra.xiaojukeji.com/chishui/dicloud-webapp:$CI_BUILD_REF_NAME;
        docker rmi harbor.intra.xiaojukeji.com/chishui/dicloud-webapp:$CI_BUILD_REF_NAME;
        echo "--------------------------------------------------------------------------------";
        echo "harbor.intra.xiaojukeji.com/chishui/dicloud-webapp:$CI_BUILD_REF_NAME";
        echo "--------------------------------------------------------------------------------";
      else
        DATE=`date +%Y%m%d`;
        docker login registry.xiaojukeji.com -u$PRD_REG -p$PRD_REG_PASS;
        docker tag $IMAGE_ID registry.xiaojukeji.com/chishui/dicloud-webapp:$DATE.$CI_BUILD_ID;
        docker push registry.xiaojukeji.com/chishui/dicloud-webapp:$DATE.$CI_BUILD_ID;
        docker rmi registry.xiaojukeji.com/chishui/dicloud-webapp:$DATE.$CI_BUILD_ID;
        echo "Please check thoes URLs for desktop webapp:";
        cat dist/index.html | grep -Eo "//[a-zA-Z0-9./?=_-]*" | grep -v "google" | awk '{print "https:"$1}';
        echo "--------------------------------------------------------------------------------";
        echo "registry.xiaojukeji.com/chishui/dicloud-webapp:$DATE.$CI_BUILD_ID";
        echo "--------------------------------------------------------------------------------";
      fi


clean_dev:
  stage: cleanup
  only:
    - dev
  tags:
    - dc2fe-deploy-dev
  script:
    - docker stop webapp
    - docker rm webapp
  allow_failure: true


deploy_dev:
  stage: deploy
  only:
    - dev
  tags:
    - dc2fe-deploy-dev
  script:
    - docker pull harbor.intra.xiaojukeji.com/chishui/dicloud-webapp:dev
    - docker run --name webapp -d -p 8000:8000 harbor.intra.xiaojukeji.com/chishui/dicloud-webapp:dev


clean_test:
  stage: cleanup
  only:
    - test
  tags:
    - dc2fe-deploy-test
  script:
    - docker stop webapp
    - docker rm webapp
  allow_failure: true


deploy_test:
  stage: deploy
  only:
    - test
  tags:
    - dc2fe-deploy-test
  script:
    # - ssh root@172.22.51.26 "docker stop webapp; docker rm webapp; docker run --name webapp -d -p 8000:8000 harbor.intra.xiaojukeji.com/chishui/dicloud-webapp-test:latest"
    # - docker stop webapp
    # - docker rm webapp
    - docker pull harbor.intra.xiaojukeji.com/chishui/dicloud-webapp:test
    - docker run --name webapp -d -p 8000:8000 harbor.intra.xiaojukeji.com/chishui/dicloud-webapp:test
